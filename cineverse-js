// script.js

// 1. Movie Data
const movies = [
    { id: 1, title: "Quantum Quest", duration: "1h 55m", rating: "PG-13", genre: "Sci-Fi", poster: "quantum_quest.jpg" },
    { id: 2, title: "The Last Samurai's Code", duration: "2h 10m", rating: "R", genre: "Action/Drama", poster: "samurai_code.jpg" },
    { id: 3, title: "Midnight Whispers", duration: "1h 40m", rating: "PG", genre: "Mystery/Thriller", poster: "midnight_whispers.jpg" },
    { id: 4, title: "Cosmic Comedy Club", duration: "1h 30m", rating: "G", genre: "Comedy", poster: "cosmic_comedy.jpg" }
];

// 2. Showtime Data (Simplified for a single day/cinema initially)
// In a real app, this would be linked to a specific movie and cinema
const showtimes = [
    { movieId: 1, time: "10:30", screen: 1, availableSeats: 100 },
    { movieId: 1, time: "14:00", screen: 2, availableSeats: 100 },
    { movieId: 2, time: "11:00", screen: 3, availableSeats: 100 },
    { movieId: 3, time: "13:30", screen: 1, availableSeats: 100 },
    { movieId: 4, time: "16:00", screen: 2, availableSeats: 100 },
    { movieId: 2, time: "17:45", screen: 3, availableSeats: 100 },
];

// 3. Simple State Management for the selected movie/showtime
let selectedMovieId = null;
let selectedShowtime = null;
let bookedSeats = []; // Array to hold seat objects { showtimeId: X, seat: 'A5' }

console.log("Data structures initialized.");


----or--
// script.js (Append this to the existing script.js content)

function displayMovies() {
    const movieListContainer = document.getElementById('movie-list');
    movieListContainer.innerHTML = ''; // Clear previous content

    movies.forEach(movie => {
        // Find showtimes for the current movie
        const movieShowtimes = showtimes.filter(st => st.movieId === movie.id);

        // 1. Create the main movie card element
        const movieCard = document.createElement('div');
        movieCard.classList.add('movie-card');

        // 2. Build the HTML content for the card
        movieCard.innerHTML = `
            <img src="posters/${movie.poster}" alt="${movie.title} Poster" class="movie-poster">
            <div class="movie-info">
                <h3>${movie.title}</h3>
                <p><strong>Genre:</strong> ${movie.genre} | <strong>Rating:</strong> ${movie.rating}</p>
                <p><strong>Duration:</strong> ${movie.duration}</p>
                <div class="showtime-buttons">
                    ${movieShowtimes.map(showtime => `
                        <button 
                            class="showtime-btn" 
                            data-movie-id="${movie.id}" 
                            data-time="${showtime.time}"
                            onclick="selectShowtime(${movie.id}, '${showtime.time}')"
                        >
                            ${showtime.time}
                        </button>
                    `).join('')}
                </div>
            </div>
        `;

        // 3. Add the card to the container
        movieListContainer.appendChild(movieCard);
    });
}

// Placeholder function for the next step (Showtime selection)
function selectShowtime(movieId, time) {
    selectedMovieId = movieId;
    selectedShowtime = showtimes.find(st => st.movieId === movieId && st.time === time);

    if (selectedShowtime) {
        console.log(`Selected Movie: ${movies.find(m => m.id === selectedMovieId).title} at ${time}`);
        // TODO: In the next step, we'll hide the movie list and show the seat map.
    }
}
